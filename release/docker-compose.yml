services:
  db:
    image: postgres:16.2-bookworm
    container_name: rent_house_db
    environment:
      - PGPORT=${RENT_HOUSE_DB_PORT}
      - POSTGRES_USER=${RENT_HOUSE_DB_USER}
      - POSTGRES_PASSWORD=${RENT_HOUSE_DB_PASSWORD}
      - POSTGRES_DB=postgres
    ports:
      - ${RENT_HOUSE_DB_PORT}:${RENT_HOUSE_DB_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${RENT_HOUSE_DB_USER} -p ${RENT_HOUSE_DB_PORT}"
        ]
      interval: 1m
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 10s
    restart: unless-stopped
    networks:
      - default
  server:
    image: ${RENT_HOUSE_APP_IMAGE}
    container_name: rent_house_server
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${RENT_HOUSE_SERVER_PORT}:${RENT_HOUSE_SERVER_PORT}
    volumes:
      - server_data:/rent-house-data
    restart: unless-stopped
    networks:
      - default
    environment:
      - NODE_ENV=production
      - PORT=${RENT_HOUSE_SERVER_PORT}
      - DATABASE_URL=postgresql://${RENT_HOUSE_DB_USER}:${RENT_HOUSE_DB_PASSWORD}@db:${RENT_HOUSE_DB_PORT}/${RENT_HOUSE_DB_NAME}?schema=public
      - IMAGES_DIRECTORY=/rent-house-data/images
      - STATIC_DIRECTORY=/rent-house/static
      - PASSWORD_FILE=/rent-house-data/password.txt
      - AUTO_MIGRATE=${RENT_HOUSE_AUTO_MIGRATE}

volumes:
  db_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${RENT_HOUSE_DB_DATA_PATH}
  server_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${RENT_HOUSE_SERVER_DATA_PATH}
